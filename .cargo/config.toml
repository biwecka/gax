# Cargo aliases ################################################################
[alias]
# Main crate
r   = "run -p"                      # run
rr  = "run --release -p"            # run (release mode)

b   = "build -p"                    # build
br  = "build --release -p"          # build (release mode)

c   = "check -p"                    # check

wr-solver = ["watch", "-q", "-c", "--ignore", "assets", "-x", "run -p solver"]
wb-solver = ["watch", "-q", "-c", "--ignore", "assets", "-x", "build -p solver"]
wc-solver = ["watch", "-q", "-c", "--ignore", "assets", "-x", "check -p solver"]

wr-playground = ["watch", "-q", "-c", "--ignore", "assets", "-x", "run -p playground"]
wb-playground = ["watch", "-q", "-c", "--ignore", "assets", "-x", "build -p playground"]
wc-playground = ["watch", "-q", "-c", "--ignore", "assets", "-x", "check -p playground"]


# Whole workspace
bw  = "build --workspace"           # build workspace
bwr = "build --workspace --release" # build workspace (release mode)

cw  = "check --workspace"           # check workspace

wbw = "watch -q -c -x bw"           # watch build workspace
wcw = "watch -q -c -x cw"           # watch check workspace


# Misc
clp = "clippy --all-targets --all-features -- -D warnings"
docw= "doc --workspace --no-deps"
wdoc= ["watch", "-q", "-c", "-x", "doc --workspace --no-deps"]


# Configure Compiler Options ###################################################
[build]
rustflags = [
    "-Z", "threads=8",                  # enable parallel compiler frontend
    "-C", "target-cpu=native",          # native CPU instructions
]

[target.x86_64-unknown-linux-gnu]
rustflags = [
    "-Z", "threads=8",                  # enable parallel compiler frontend
    "-C", "link-arg=-fuse-ld=mold",     # set linker to "mold"
    "-C", "target-cpu=native",          # native CPU instructions
]

# Linker driver (clang is only needed here, if gcc version is too old)
# linker = "clang"
# For more information about the mold linker see:
# https://github.com/rui314/mold?tab=readme-ov-file#how-to-use

################################################################################
